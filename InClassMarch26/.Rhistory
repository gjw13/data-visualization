library(tidyverse)
head(mpg)
q <- ggplot(mpg,aes(x=displ, y=cty))
q + geom_point() #scatter plot
q + geom_jitter() #jittered scatter plot
q + geom_jitter(alpha=.5) #semi-transparent jittered scatter plot
q + geom_bin2d() # tile plot displaying 2D density
q + geom_bin2d(bins=c(10,10)) #controlling binning in tile plot
q + geom_bin2d(bins=c(2,2)) + geom_jitter(color="green") #overlaying points to tile plot
q + geom_density2d() # contour plot
q + geom_density2d() +
scale_x_continuous(lim=c(1,7)) +
scale_y_continuous(lim=c(8,36))
q + stat_density2d()
q + stat_density2d(aes(color=..level..))+scale_color_gradientn(colors=topo.colors(5))
q + stat_density2d(geom="polygon",aes(fill=..level..)) + scale_fill_gradientn(colors=terrain.colors(5)) + xlim(1,7)+ylim(8,36) #contour/level plot
q + stat_density2d(geom = "raster", aes(fill = ..density..), contour = FALSE) #level plot without contours
q + geom_point()
q + geom_count(alpha=.5) #bubble plot
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
diamonds.small <-  diamonds[sample(nrow(diamonds), 500), ]
diamonds.small <-  diamonds[sample(nrow(diamonds), 500) ]
diamonds.small <-  diamonds[sample(nrow(diamonds), 500), ]
set.seed(40)
View(diamonds.small)
q <- ggplot(diamonds.small,aes(x=carat, y=price))
q + geom_point() #scatter plot
q + geom_point() +
labels(x="Carat",y="Price",title="Carat vs. Price of dimanonds")#scatter plot
q + geom_point() +
labs(x="Carat",y="Price",title="Carat vs. Price of dimanonds")#scatter plot
q + geom_point() +
labs(x="Carat",y="Price",title="Carat vs. Price of Diamonds")#scatter plot
q + geom_point() +
labs(x="Carat",y="Price",title="Carat vs. Price of Diamonds")+
theme_classic()#scatter plot
q + geom_point() +
labs(x="Carat",y="Price",title="Carat vs. Price of Diamonds")+
theme_minimal()#scatter plot
q + geom_point()
q + geom_count(alpha=.5) #bubble plot
q + geom_count(aes(size=..prop..),alpha=.5) #bubble plot
q + geom_count(aes(size=..prop.., color=as.factor(cyl)),alpha=.5) #bubble plot
q + geom_count(aes(size=..prop.., color=as.factor(price)),alpha=.5) #bubble plot
head(mpg)
q + geom_count(aes(size=..prop.., color=as.factor(carat)),alpha=.5) #bubble plot
q + geom_count(aes(color=as.factor(carat)),alpha=.5) #bubble plot
q + geom_count(aes(size=..prop..),alpha=.5) #bubble plot
q + geom_count(aes(size=..prop.., color=as.factor(cut)),alpha=.5) #bubble plot
q + geom_count(aes(color=as.factor(cut)),alpha=.5) #bubble plot
q + geom_count(aes(size=..prop.., color=as.factor(cut)),alpha=.5) #bubble plot
q + geom_bin2d() # tile plot displaying 2D density
q <- ggplot(diamonds.small,aes(x=carat, y=price))+
labs(x="Carat",y="Price")
q + geom_bin2d() # tile plot displaying 2D density
q + geom_bin2d(bins=c(10,10)) #controlling binning in tile plot
q + geom_bin2d(bins=c(2,2)) #controlling binning in tile plot
q + geom_bin2d(bins=c(20,20)) #controlling binning in tile plot
q + geom_bin2d(bins=c(20,20))+
geom_jitter(color="green")#controlling binning in tile plot
q + geom_density2d() # contour plot
q + geom_density2d() +
scale_x_continuous(lim=c(1,7)) +
scale_y_continuous(lim=c(8,36))
q + stat_density2d(aes(color=..level..))+scale_color_gradientn(colors=topo.colors(5))
q + geom_jitter() #jittered scatter plot
q + geom_jitter(alpha=.5) #jittered scatter plot
q + geom_jitter(alpha=.5)+
geom_smooth(method="lm",se=T,level=.99)#jittered scatter plot
q + geom_jitter(alpha=.5)+
geom_smooth(method="lm",se=T,level=.5)#jittered scatter plot
q + geom_jitter() + geom_smooth(method="lm",formula=y~x)
q + geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2))
q + geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,3))
q + geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,4))
q + geom_jitter() + geom_smooth(method="lm",formula=y~x)
q + geom_jitter(alpha=.5)+
geom_smooth(method="lm",se=T,level=.5)#jittered scatter plot
q + geom_jitter(alpha=.5)+
geom_smooth(method="lm",se=T,level=.95)#jittered scatter plot
g <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",se=T,level=.67)
g
graph7 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",se=T,level=.67)
graph7
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
diamonds.small <-  diamonds[sample(nrow(diamonds), 500), ]
set.seed(40)
q <- ggplot(diamonds.small,aes(x=carat, y=price))+
labs(x="Carat",y="Price")
q + geom_point() +
theme_minimal()#scatter plot
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,4))
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,3))
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2))
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,1))
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2))
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~x)
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2))
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2),level=.01)
graph8
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2),level=.33)
graph8
q + geom_bin2d(bins=c(20,20))#+
q <- ggplot(diamonds.small,aes(x=carat, y=price))+
labs(x="Carat",y="Price")
q + geom_point() +
theme_minimal()#scatter plot
q + geom_count(aes(size=..prop..),alpha=.5) #bubble plot
q + geom_density2d() # contour plot
q + stat_density2d(aes(color=..level..))+scale_color_gradientn(colors=topo.colors(5))
graph8 <- ggplot(diamonds.small,aes(x=carat, y=price,color=as.factor(cut))) +
geom_jitter() + geom_smooth(method="lm",formula=y~poly(x,2),level=.50)
graph8
