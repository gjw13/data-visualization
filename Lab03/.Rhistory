library(tidyverse)
library(lubridate)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
View(gridded_data)
head(gridded_data)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
View(monthly_data)
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
View(monthly_data)
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
View(current_data)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
View(current_data)
View(current_data)
library(maps)
world <- map_data("world")
g<-ggplot()+
geom_tile(data=current_data,
aes(x=longitude, y=latitude, fill=TempAnom),
width=5, height=5,alpha=.5)+
scale_fill_distiller(palette="RdBu")+
theme_void()
g <- g+geom_path(data = world, aes(x = long, y = lat, group = group))
g + coord_map(xlim=c(-180,180),ylim=c(-90,90))
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
View(current_data)
tail(current_data)
library(tidyverse)
library(lubridate)
library(maps)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
View(current_data)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
remove(current_data)
remove(gridded_data)
remove(integer_date)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
View(gridded_data)
View(monthly_data)
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
monthly_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(monthly_data)[1:72] <- longitudes
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
View(monthly_data)
View(current_data)
View(current_data)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
library(tidyverse)
library(lubridate)
library(maps)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
View(current_data)
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
# current_data <- mutate(current_data,
# TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
View(current_data)
#Read in data and clean up
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
View(current_data)
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
View(current_data)
View(monthly_data)
View(monthly_data)
View(monthly_data[["Jan 2010"]])
remove(current_data)
shiny::runApp()
carbon_data <- read_csv("cumulative-co-emmissions.csv")
carbon_data <- read_csv("cumulative-co-emissions.csv")
carbon_data <- filter(carbon_data,Entity="World")
carbon_data <- filter(carbon_data,Entity=="World")
View(carbon_data)
View(carbon_data)
## ------------------------------------------------------------------------
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
world <- map_data("world")
## ------------------------------------------------------------------------
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
## ------------------------------------------------------------------------
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
#current_data <- mutate(current_data,
# TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
remove(current_data)
monthly_temps <- read.csv("monthly_global_land_and_ocean_temperature_anomalies.csv")
#mutates the monthly_temps object so that it converts the YearMonth variable to year-month-date format, and truncated=1 indicates that the date is missing, ultimately converts it from an int to Date class
monthly_temps <- mutate(monthly_temps,
date = ymd(YearMonth, truncated=1))
# Extract Year and Month
monthly_temps <- mutate(monthly_temps,
year=year(date),
month=month(date,label=TRUE))
#renames the "Value" variable as "temperature_anomaly"
monthly_temps <- rename(monthly_temps, temperature_anomaly = Value)
#gets rid of the YearMonth variable
monthly_temps <- select(monthly_temps, -YearMonth)
carbon_data <- read_csv("cumulative-co-emissions.csv")
carbon_data <- filter(carbon_data,Entity=="World")
runApp()
runApp()
library(tidyverse)
library(lubridate)
library(maps)
## ------------------------------------------------------------------------
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
world <- map_data("world")
## ------------------------------------------------------------------------
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
## ------------------------------------------------------------------------
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
#current_data <- mutate(current_data,
# TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
remove(current_data)
View(monthly_data)
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
View(monthly_data)
## ------------------------------------------------------------------------
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
## ------------------------------------------------------------------------
gridded_data <- read_csv("gridded_data.csv",col_names =F)
number_of_months <- nrow(gridded_data)/37
monthly_data <- vector("list",number_of_months)
world <- map_data("world")
## ------------------------------------------------------------------------
for(i in 1:number_of_months){
monthly_data[[i]] <- gridded_data[((i-1)*37+2):(i*37),] #extract and store temperature anomalies
integer_date <- gridded_data[((i-1)*37+1),2]*100+gridded_data[((i-1)*37+1),1] #get date for current month in yyyymm format
current_date <- ymd(integer_date ,truncated=1)  #convert to Date class
current_month <- month(current_date, label=T) #extract named month
current_year <- year(current_date) #extract year
names(monthly_data)[i] <- paste(current_month, current_year) #paste together named month and year to name data
}
## ------------------------------------------------------------------------
current_data <- monthly_data[["Apr 1975"]]
latitudes <- rev(seq(from=-87.5, to=87.5, by=5))
current_data$latitude <- latitudes
longitudes <- seq(from=-177.5, to=177.5, by=5)
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude", value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
for(i in 1:number_of_months){
current_data <- monthly_data[[i]]
current_data$latitude <- latitudes
colnames(current_data)[1:72] <- longitudes
current_data <- gather(current_data, key="longitude",
value="TempAnom", -latitude)
current_data$longitude <- as.numeric(current_data$longitude)
current_data <- mutate(current_data,
TempAnom = ifelse(TempAnom==-9999, NA, TempAnom/100))
monthly_data[[i]] <- current_data
}
remove(current_data)
View(monthly_data)
monthly_temps <- read.csv("monthly_global_land_and_ocean_temperature_anomalies.csv")
#mutates the monthly_temps object so that it converts the YearMonth variable to year-month-date format, and truncated=1 indicates that the date is missing, ultimately converts it from an int to Date class
monthly_temps <- mutate(monthly_temps,
date = ymd(YearMonth, truncated=1))
# Extract Year and Month
monthly_temps <- mutate(monthly_temps,
year=year(date),
month=month(date,label=TRUE))
#renames the "Value" variable as "temperature_anomaly"
monthly_temps <- rename(monthly_temps, temperature_anomaly = Value)
#gets rid of the YearMonth variable
monthly_temps <- select(monthly_temps, -YearMonth)
View(monthly_temps)
carbon_data <- read_csv("cumulative-co-emissions.csv")
carbon_data <- filter(carbon_data,Entity=="World")
View(carbon_data)
View(carbon_data)
carbon_data <- read_csv("cumulative-co-emissions.csv")
carbon_data <- filter(carbon_data, Entity=="World")
View(carbon_data)
carbon_data <- read_csv("cumulative-co-emissions.csv")
carbon_data <- filter(carbon_data, Entity=="World")
View(carbon_data)
carbon_data <- read_csv("cumulative-co-emissions.csv")
carbon_data <- filter(carbon_data, Entity=="World")
View(carbon_data)
View(carbon_data)
shiny::runApp()
runApp()
runApp()
runApp()
View(carbon_data)
runApp()
runApp()
runApp()
runApp()
View(carbon_data)
runApp()
runApp()
runApp()
runApp()
View(carbon_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_smooth
runApp()
runApp()
runApp()
?min
head(xlimits)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?scale_color_gradientn
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
